survey_data$age <65 ~ "45 to 64 years",
survey_data$age >65 ~ "Over 65",
))
View(survey_data.1)
# age group for census data
census_data.5 <- census_data.4 %>%
mutate(age_group = case_when(census_data.4$age <18 ~ "Under 18",
census_data.4$age <25 ~ "18 to 24 years",
census_data.4$age <45 ~ "25 to 44 years",
census_data.4$age <65 ~ "45 to 64 years",
census_data.4$age >64 ~ "Over 65",
))
# age group for survey data
survey_data.1 <- survey_data %>%
mutate(age_group = case_when(survey_data$age <18 ~ "Under 18",
survey_data$age <25 ~ "18 to 24 years",
survey_data$age <45 ~ "25 to 44 years",
survey_data$age <65 ~ "45 to 64 years",
survey_data$age >64 ~ "Over 65",
))
table(census_data.5$age)
table(census_data.5$age_group)
table(survey_data.1$age_group)
NDP_predic <- survey_data.1 %>%
mutate(NDP_pref = case_when( survey_data.1$political_pref == "NDP (New Democratic Party, New Democrats, NDPers)" ~ 1,
survey_data.1$political_pref != "NDP (New Democratic Party, New Democrats, NDPers)" ~ 0))
# catoger the age groups for model
NDP_predic.1 <- survey_data.1 %>%
mutate(NDP_pref = case_when( survey_data.1$political_pref == "NDP (New Democratic Party, New Democrats, NDPers)" ~ 1,
survey_data.1$political_pref != "NDP (New Democratic Party, New Democrats, NDPers)" ~ 0))
# make the modle based on the new data catogeries
glm_NDP_model.2<-glmer(NDP_pref ~ sex + education +  income_family +  age_group + (1|province), data=NDP_predic.1, family=binomial)
summary(glm_NDP_model.2)
# assign bins and get the counts
survey_data.1 <- survey_data.1 %>%
group_by(age_group)
survey_data.1 <- survey_data %>%
mutate(age_group = case_when(survey_data$age <18 ~ "Under 18",
survey_data$age <25 ~ "18 to 24 years",
survey_data$age <45 ~ "25 to 44 years",
survey_data$age <65 ~ "45 to 64 years",
survey_data$age >64 ~ "Over 65",
))
# assign bins and get the counts
survey_data.2 <- survey_data.1 %>%
group_by(age_group)
View(survey_data.2)
View(survey_data.1)
View(survey_data)
survey_data.2 <- survey_data %>%
mutate(age_group = case_when(survey_data$age <18 ~ "Under 18",
survey_data$age <25 ~ "18 to 24 years",
survey_data$age <45 ~ "25 to 44 years",
survey_data$age <65 ~ "45 to 64 years",
survey_data$age >64 ~ "Over 65",
))
View(survey_data.2)
survey_data.1 <- survey_data %>%
mutate(age_group = case_when(survey_data$age <18 ~ "Under 18",
survey_data$age <25 ~ "18 to 24 years",
survey_data$age <45 ~ "25 to 44 years",
survey_data$age <65 ~ "45 to 64 years",
survey_data$age >64 ~ "Over 65",
))
NDP_predic.1 <- survey_data.1 %>%
mutate(NDP_pref = case_when( survey_data.1$political_pref == "NDP (New Democratic Party, New Democrats, NDPers)" ~ 1,
survey_data.1$political_pref != "NDP (New Democratic Party, New Democrats, NDPers)" ~ 0))
# catoger the age groups for model
NDP_predic.1 <- survey_data.1 %>%
mutate(NDP_pref = case_when( survey_data.1$political_pref == "NDP (New Democratic Party, New Democrats, NDPers)" ~ 1,
survey_data.1$political_pref != "NDP (New Democratic Party, New Democrats, NDPers)" ~ 0))
View(NDP_predic.1)
glm_NDP_model.2<-glmer(NDP_pref ~ sex + education +  income_family +  age_group + (1|province), data=NDP_predic.1, family=binomial)
summary(glm_NDP_model.2)
# assign bins and get the counts
census_data.2 <- survey_data.1 %>%
group_by(ages= age_group)
View(census_data.2)
table(census_data.2$age_group)
summary(census_data.5)
# assign bins and get the counts
census_data.22 <- survey_data.1 %>%
count(sex, province, education,  income_family, place_birth, age_group)
# assign bins and get the counts
census_data.22 <- census_data.5 %>%
count(sex, province, education,  income_family, place_birth, age_group)
View(census_data.5)
View(census_data.22)
View(NDP_predic.1)
View(census_data.22)
View(census_data.5)
census_data.6 <- select(census_data.5, -6)
View(survey_data.1)
#filtering out the required columns
census_data.1 <- select(census_data, 2,12,16,17,19,28,47)
#head(census_data.1)
# adding the place of birth to our data set
census_data.2 <- census_data.1 %>% mutate(place_birth = coalesce(place_birth_macro_region, place_birth_province ))
#[https://stackoverflow.com/questions/14563531/combine-column-to-remove-nas]
# removing the columns for place of birth
census_data.3 <- select(census_data.2, -3,-4)
view(census_data.3)
# remove the NA
census_data.4 <- na.omit(census_data.3)
## EDUCATION
# combining the "Trade certificate or diploma" +"College, CEGEP or other non-university certificate or di..."
# into "College, CEGEP, trade certificate or other non-university certificate or di..."
# reason: to sync with the survey data categoery
census_data.4$education <- replace(census_data.4$education, census_data.4$education ==
"College, CEGEP or other non-university certificate or di...",
"College, CEGEP, trade certificate or other non-university certificate or di...")
census_data.4$education <- replace(census_data.4$education, census_data.4$education ==
"Trade certificate or diploma", "College, CEGEP, trade certificate or other non-university certificate or di...")
## Age
# we drop the decimal point to stay consistent with the survey
census_data.4$age <- floor(census_data.4$age)
#https://stackoverflow.com/questions/40399255/remove-decimals-from-a-column-in-a-data-frame
View(census_data.6)
View(survey_data.1)
View(survey_data)
# survey data grouping based on age
survey_data.1 <- survey_data %>%
mutate(age_group = case_when(survey_data$age <18 ~ "Under 18",
survey_data$age <25 ~ "18 to 24 years",
survey_data$age <45 ~ "25 to 44 years",
survey_data$age <65 ~ "45 to 64 years",
survey_data$age >64 ~ "Over 65",
))
View(survey_data.1)
summary(survey_data.1)
summary(census_data.6)
survey_data.2 <- select(survey_data.1, -3, -6)
summary(census_data.6)
summary(survey_data.1)
View(survey_data.1)
View(census_data.5)
View(survey_data.2)
census_data.6 <- select(census_data.5, -6, -1)
View(census_data.6)
survey_data.1 <- survey_data %>%
mutate(age_group = case_when(survey_data$age <18 ~ "Under 18",
survey_data$age <25 ~ "18 to 24 years",
survey_data$age <45 ~ "25 to 44 years",
survey_data$age <65 ~ "45 to 64 years",
survey_data$age >64 ~ "Over 65",
))
survey_data.2 <- select(survey_data.1, -3, -6)
View(survey_data.2)
survey_data.2 <- select(survey_data.1, -3, -6, -5)
View(survey_data.2)
View(survey_data.1)
survey_data.2 <- select(survey_data.1, -3, -6)
View(survey_data.2)
survey_data.2 <- select(survey_data.1, -3, -6)
survey_data.2 <- select(survey_data.1, -3, -6)
survey_data.2 <- select(survey_data.2, -5)
View(survey_data.2)
summary(survey_data.2)
summary(census_data.6)
NDP_predic.1 <- survey_data.2 %>%
mutate(NDP_pref = case_when( survey_data.2$political_pref == "NDP (New Democratic Party, New Democrats, NDPers)" ~ 1,
survey_data.2$political_pref != "NDP (New Democratic Party, New Democrats, NDPers)" ~ 0))
summary(NDP_predic.1)
glm_NDP_model.2<-glmer(NDP_pref ~ sex, (1|province), education, political_pref, income_family,age_group , data=NDP_predic.1, family=binomial)
glm_NDP_model.2<-glmer(NDP_pref ~ sex+ (1|province)+ education+ political_pref+ income_family+age_group , data=NDP_predic.1, family=binomial)
summary(glm_NDP_model.2)
glm_NDP_model.2<-glmer(NDP_pref ~ sex+ (1|province)+ education+ income_family+age_group , data=NDP_predic.1, family=binomial)
summary(glm_NDP_model.2)
census_data.7 <- census_data.6 %>%
count(sex, province, education,  income_family, place_birth, age_group)
# assign bins and get the counts
census_data.7 <- census_data.6 %>%
count(sex, province, education,  income_family, age_group)
View(census_data.7)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#library(openintro)
library(tidyverse)
library(broom)
library(ggpubr)
library(lme4)
library(brms)
library(survey)
# Here we are just loading the data files
census_data <- read_csv("gss_clean.csv")
# Here you can load in the survey data
survey_data <- read_csv("ces2019_clean.csv")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#library(openintro)
library(tidyverse)
library(broom)
library(ggpubr)
library(lme4)
library(brms)
library(survey)
# Here we are just loading the data files
census_data <- read_csv("gss_clean.csv")
# Here you can load in the survey data
survey_data <- read_csv("ces2019_clean.csv")
#filtering out the required columns
census_data.1 <- select(census_data, 2,12,16,17,19,28,47)
#head(census_data.1)
# adding the place of birth to our data set
census_data.2 <- census_data.1 %>% mutate(place_birth = coalesce(place_birth_macro_region, place_birth_province ))
#[https://stackoverflow.com/questions/14563531/combine-column-to-remove-nas]
# removing the columns for place of birth
census_data.3 <- select(census_data.2, -3,-4)
#view(census_data.3)
# remove the NA
census_data.4 <- na.omit(census_data.3)
## EDUCATION
# combining the "Trade certificate or diploma" +"College, CEGEP or other non-university certificate or di..."
# into "College, CEGEP, trade certificate or other non-university certificate or di..."
# reason: to sync with the survey data categoery
census_data.4$education <- replace(census_data.4$education, census_data.4$education ==
"College, CEGEP or other non-university certificate or di...",
"College, CEGEP, trade certificate or other non-university certificate or di...")
census_data.4$education <- replace(census_data.4$education, census_data.4$education ==
"Trade certificate or diploma", "College, CEGEP, trade certificate or other non-university certificate or di...")
## Age
# we drop the decimal point to stay consistent with the survey
census_data.4$age <- floor(census_data.4$age)
#https://stackoverflow.com/questions/40399255/remove-decimals-from-a-column-in-a-data-frame
# age group for census data
census_data.5 <- census_data.4 %>%
mutate(age_group = case_when(census_data.4$age <18 ~ "Under 18",
census_data.4$age <25 ~ "18 to 24 years",
census_data.4$age <45 ~ "25 to 44 years",
census_data.4$age <65 ~ "45 to 64 years",
census_data.4$age >64 ~ "Over 65",
))
View(census_data.5)
View(census_data.4)
survey_data.1 <- survey_data %>%
mutate(age_group = case_when(survey_data$age <18 ~ "Under 18",
survey_data$age <25 ~ "18 to 24 years",
survey_data$age <45 ~ "25 to 44 years",
survey_data$age <65 ~ "45 to 64 years",
survey_data$age >64 ~ "Over 65",
))
View(survey_data.1)
# removing feeling life, religion participation
survey_data.2 <- select(survey_data.1, -3, -6)
View(survey_data.2)
# group the survey data by the provience
AlbertaXsurveyXNDP <- NDP_predic.1 %>% group_by(province = "Alberta")
# catoger the age groups for model
NDP_predic.1 <- survey_data.2 %>%
mutate(NDP_pref = case_when(survey_data.2$political_pref == "NDP (New Democratic Party, New Democrats, NDPers)" ~ 1,
survey_data.2$political_pref != "NDP (New Democratic Party, New Democrats, NDPers)" ~ 0))
# group the survey data by the provience
AlbertaXsurveyXNDP <- NDP_predic.1 %>% group_by(province = "Alberta")
View(AlbertaXsurveyXNDP)
summary(AlbertaXsurveyXNDP)
## assign bins and get the counts for the census data
# filter out for Alberta
albertaXcensus <- census_data.6 %>% group_by(province = "Alberta")
## assign bins and get the counts for the census data
# filter out for Alberta
albertaXcensus <- census_data.5 %>% group_by(province = "Alberta")
View(AlbertaXsurveyXNDP)
View(albertaXcensus)
# get the bin count
albertaXcensus.1 <- albertaXcensus %>%
count(sex, education,  income_family, age_group)
View(albertaXcensus.1)
X <- predict(glm_NDP_model.2, albertaXcensus)
glm_NDP_model.2<-glmer(NDP_pref ~ sex + education + income_family + age_group, data=NDP_predic.1, family=binomial)
# make the model
glm_NDP_model.2<-glmer(NDP_pref ~ sex + education + income_family + age_group, data=NDP_predic.1, family=binomial)
glm_NDP_model.2<-glmer(NDP_pref ~ sex + education + (1|income_family) + age_group, data=NDP_predic.1, family=binomial)
#results
summary(glm_NDP_model.2)
X <- predict(glm_NDP_model.2, albertaXcensus)
# make the model
glm_NDP_model.2<-glmer(NDP_pref ~ sex + education + income_family + age_group, data=AlbertaXsurveyXNDP, family=binomial)
AlbertaXsurveyXNDP <- NDP_predic.1 %>% group_by(province = "Alberta")
# make the model
glm_NDP_model.2<-glmer(NDP_pref ~ sex + education + (1|income_family) + age_group, data=AlbertaXsurveyXNDP, family=binomial)
#results
summary(glm_NDP_model.2)
## assign bins and get the counts for the census data
# filter out for Alberta
albertaXcensus <- census_data.5 %>% group_by(province = "Alberta")
# get the bin count
albertaXcensus.1 <- albertaXcensus %>%
count(sex, education,  income_family, age_group)
# make the prediction
X <- predict(glm_NDP_model.2, albertaXcensus)
table(albertaXcensus$age_group)
table(AlbertaXsurveyXNDP$age_group)
#removing ppl less than 18
census_data.4[census_data.4$age < 18, ]
# age group for census data
census_data.5 <- census_data.4 %>%
mutate(age_group = case_when(census_data.4$age <18 ~ "Under 18",
census_data.4$age <25 ~ "18 to 24 years",
census_data.4$age <45 ~ "25 to 44 years",
census_data.4$age <65 ~ "45 to 64 years",
census_data.4$age >64 ~ "Over 65",
))
# dropping place of birth and their age
census_data.6 <- select(census_data.5, -6, -1)
# survey data grouping based on age
survey_data.1 <- survey_data %>%
mutate(age_group = case_when(survey_data$age <18 ~ "Under 18",
survey_data$age <25 ~ "18 to 24 years",
survey_data$age <45 ~ "25 to 44 years",
survey_data$age <65 ~ "45 to 64 years",
survey_data$age >64 ~ "Over 65",
))
# removing feeling life, religion participation, age
survey_data.2 <- select(survey_data.1, -3, -6)
survey_data.2 <- select(survey_data.2, -5)
# catoger the age groups for model
NDP_predic.1 <- survey_data.2 %>%
mutate(NDP_pref = case_when(survey_data.2$political_pref == "NDP (New Democratic Party, New Democrats, NDPers)" ~ 1,
survey_data.2$political_pref != "NDP (New Democratic Party, New Democrats, NDPers)" ~ 0))
# group the survey data by the provience filter out Alberta ppl
AlbertaXsurveyXNDP <- NDP_predic.1 %>% group_by(province = "Alberta")
# make the model
glm_NDP_model.2<-glmer(NDP_pref ~ sex + education + (1|income_family) + age_group, data=AlbertaXsurveyXNDP, family=binomial)
#results
summary(glm_NDP_model.2)
## assign bins and get the counts for the census data
# filter out for Alberta
albertaXcensus <- census_data.5 %>% group_by(province = "Alberta")
# get the bin count
albertaXcensus.1 <- albertaXcensus %>%
count(sex, education,  income_family, age_group)
X <- predict(glm_NDP_model.2, albertaXcensus)
table(census_data.6$age_group)
#removing ppl less than 18
census_data.4 <- census_data.4[census_data.4$age < 18, ]
# age group for census data
census_data.5 <- census_data.4 %>%
mutate(age_group = case_when(census_data.4$age <18 ~ "Under 18",
census_data.4$age <25 ~ "18 to 24 years",
census_data.4$age <45 ~ "25 to 44 years",
census_data.4$age <65 ~ "45 to 64 years",
census_data.4$age >64 ~ "Over 65",
))
# dropping place of birth and their age
census_data.6 <- select(census_data.5, -6, -1)
table(census_data.6$age_group)
#filtering out the required columns
census_data.1 <- select(census_data, 2,12,16,17,19,28,47)
#head(census_data.1)
# adding the place of birth to our data set
census_data.2 <- census_data.1 %>% mutate(place_birth = coalesce(place_birth_macro_region, place_birth_province ))
#[https://stackoverflow.com/questions/14563531/combine-column-to-remove-nas]
# removing the columns for place of birth
census_data.3 <- select(census_data.2, -3,-4)
#view(census_data.3)
# remove the NA
census_data.4 <- na.omit(census_data.3)
#filtering out the required columns
census_data.1 <- select(census_data, 2,12,16,17,19,28,47)
#head(census_data.1)
# adding the place of birth to our data set
census_data.2 <- census_data.1 %>% mutate(place_birth = coalesce(place_birth_macro_region, place_birth_province ))
#[https://stackoverflow.com/questions/14563531/combine-column-to-remove-nas]
# removing the columns for place of birth
census_data.3 <- select(census_data.2, -3,-4)
#view(census_data.3)
# remove the NA
census_data.4 <- na.omit(census_data.3)
## EDUCATION
# combining the "Trade certificate or diploma" +"College, CEGEP or other non-university certificate or di..."
# into "College, CEGEP, trade certificate or other non-university certificate or di..."
# reason: to sync with the survey data categoery
census_data.4$education <- replace(census_data.4$education, census_data.4$education ==
"College, CEGEP or other non-university certificate or di...",
"College, CEGEP, trade certificate or other non-university certificate or di...")
census_data.4$education <- replace(census_data.4$education, census_data.4$education ==
"Trade certificate or diploma", "College, CEGEP, trade certificate or other non-university certificate or di...")
census_data.4$age <- floor(census_data.4$age)
#removing ppl less than 18
census_data.44 <- subset(census_data.4, age >18)
census_data.5 <- census_data.4 %>%
mutate(age_group = case_when(census_data.4$age <18 ~ "Under 18",
census_data.4$age <25 ~ "18 to 24 years",
census_data.4$age <45 ~ "25 to 44 years",
census_data.4$age <65 ~ "45 to 64 years",
census_data.4$age >64 ~ "Over 65",
))
# dropping place of birth and their age
census_data.6 <- select(census_data.5, -6, -1)
# survey data grouping based on age
survey_data.1 <- survey_data %>%
mutate(age_group = case_when(survey_data$age <18 ~ "Under 18",
survey_data$age <25 ~ "18 to 24 years",
survey_data$age <45 ~ "25 to 44 years",
survey_data$age <65 ~ "45 to 64 years",
survey_data$age >64 ~ "Over 65",
))
# removing feeling life, religion participation, age
survey_data.2 <- select(survey_data.1, -3, -6)
survey_data.2 <- select(survey_data.2, -5)
# catoger the age groups for model
NDP_predic.1 <- survey_data.2 %>%
mutate(NDP_pref = case_when(survey_data.2$political_pref == "NDP (New Democratic Party, New Democrats, NDPers)" ~ 1,
survey_data.2$political_pref != "NDP (New Democratic Party, New Democrats, NDPers)" ~ 0))
# group the survey data by the provience filter out Alberta ppl
AlbertaXsurveyXNDP <- NDP_predic.1 %>% group_by(province = "Alberta")
# make the model
glm_NDP_model.2<-glmer(NDP_pref ~ sex + education + (1|income_family) + age_group, data=AlbertaXsurveyXNDP, family=binomial)
#results
summary(glm_NDP_model.2)
## assign bins and get the counts for the census data
# filter out for Alberta
albertaXcensus <- census_data.5 %>% group_by(province = "Alberta")
# get the bin count
albertaXcensus.1 <- albertaXcensus %>%
count(sex, education,  income_family, age_group)
# make the prediction
X <- predict(glm_NDP_model.2, albertaXcensus)
# age group for census data
census_data.5 <- census_data.44 %>%
mutate(age_group = case_when(census_data.44$age <18 ~ "Under 18",
census_data.44$age <25 ~ "18 to 24 years",
census_data.44$age <45 ~ "25 to 44 years",
census_data.44$age <65 ~ "45 to 64 years",
census_data.44$age >64 ~ "Over 65",
))
# dropping place of birth and their age
census_data.6 <- select(census_data.5, -6, -1)
# survey data grouping based on age
survey_data.1 <- survey_data %>%
mutate(age_group = case_when(survey_data$age <18 ~ "Under 18",
survey_data$age <25 ~ "18 to 24 years",
survey_data$age <45 ~ "25 to 44 years",
survey_data$age <65 ~ "45 to 64 years",
survey_data$age >64 ~ "Over 65",
))
# removing feeling life, religion participation, age
survey_data.2 <- select(survey_data.1, -3, -6)
survey_data.2 <- select(survey_data.2, -5)
# catoger the age groups for model
NDP_predic.1 <- survey_data.2 %>%
mutate(NDP_pref = case_when(survey_data.2$political_pref == "NDP (New Democratic Party, New Democrats, NDPers)" ~ 1,
survey_data.2$political_pref != "NDP (New Democratic Party, New Democrats, NDPers)" ~ 0))
# group the survey data by the provience filter out Alberta ppl
AlbertaXsurveyXNDP <- NDP_predic.1 %>% group_by(province = "Alberta")
# make the model
glm_NDP_model.2<-glmer(NDP_pref ~ sex + education + (1|income_family) + age_group, data=AlbertaXsurveyXNDP, family=binomial)
#results
summary(glm_NDP_model.2)
## assign bins and get the counts for the census data
# filter out for Alberta
albertaXcensus <- census_data.5 %>% group_by(province = "Alberta")
# get the bin count
albertaXcensus.1 <- albertaXcensus %>%
count(sex, education,  income_family, age_group)
# make the prediction
X <- predict(glm_NDP_model.2, albertaXcensus)
view(X)
View(albertaXcensus.1)
# make the prediction
X <- predict(glm_NDP_model.2, albertaXcensus.1)
view(X)
# getting the probability of ppl voting for NDPxAlberta
albertaXcensus.1 %>% mutate(odds_NDP = X )
View(albertaXcensus.1)
# get the bin count
albertaXcensus.1 <- albertaXcensus %>%
count(sex, education,  income_family, age_group)
View(albertaXcensus.1)
# getting the probability of ppl voting for NDPxAlberta
albertaXcensus.1$NDP_odds <- X
View(albertaXcensus.1)
# getting the probability for each group
albertaXcensus.1 %>% mutate(prob_NDP = est_p(X))
# getting the probability for each group
albertaXcensus.1 %>% mutate(prob_NDP = est_p(NDP_odds))
albertaXcensus.11 <- select(albertaXcensus.11, -1)
albertaXcensus.11 <- select(albertaXcensus.1, -1)
View(albertaXcensus.11)
View(albertaXcensus.1)
albertaXcensus.11 <- select(albertaXcensus.1, -1)
View(albertaXcensus.11)
return(exp(sum)/1+(exp(sum)))
# prob function
est_p <- function(sum){
return(exp(sum)/1+(exp(sum)))
}
# getting the probability for each group
albertaXcensus.1 %>% mutate(prob_NDP = est_p(NDP_odds))
# getting the probability for each group
albertaXcensus.1 %>% mutate(prob_NDP = est_p(NDP_odds))
View(albertaXcensus.1)
# getting the probability for each group
albertaXcensus.1 <- albertaXcensus.1 %>% mutate(prob_NDP = est_p(NDP_odds))
View(albertaXcensus.1)
# prob function
est_p <- function(sum){
# getting the probability for each group
albertaXcensus.1 <- albertaXcensus.1 %>% mutate(prob_NDP = est_p(NDP_odds))
sjdajsd;kla
}
est_p <- function(sum){
return(exp(sum)/(1+(exp(sum))))
}
# getting the probability for each group
albertaXcensus.1 <- albertaXcensus.1 %>% mutate(prob_NDP = est_p(NDP_odds))
View(albertaXcensus.1)
# post-strart stuff
## sum of N
N <- sum(albertaXcensus.1$n)
albertaXcensus.11 <- albertaXcensus.1 %>% mutate(est = (n*prob_NDP)/N)
View(albertaXcensus.11)
test <- albertaXcensus.1 %>% summarise(est = (sum(n*prob_NDP)/N))
test
